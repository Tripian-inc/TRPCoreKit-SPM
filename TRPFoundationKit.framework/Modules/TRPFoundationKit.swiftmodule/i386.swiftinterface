// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name TRPFoundationKit
import Foundation
import Swift
@_exported import TRPFoundationKit
public class TRPLogger {
  public enum Level : Swift.String {
    case debug
    case error
    case info
    case warning
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public init(prefixText: Swift.String? = nil)
  public func e(file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function, _ message: Swift.String)
  public func d(file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function, _ message: Swift.String)
  public func i(file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function, _ message: Swift.String)
  public func w(file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function, _ message: Swift.String)
  public func deInitialize(file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function)
  @objc deinit
}
extension String {
  public func toLocation() -> TRPFoundationKit.TRPLocation?
  public func toIntArray() -> [Swift.Int]
}
@objc @_inheritsConvenienceInitializers public class FoundationKitInfo : ObjectiveC.NSObject {
  @objc override dynamic public init()
  public func version() -> Swift.String?
  @objc deinit
}
public enum TRPFrameworks : Swift.String {
  case trpFoundationKit
  case trpRestKitKit
  case trpCoreKit
  case trpUserProfileKit
  case trpUIKit
  case trpAddTravelCompanionsKit
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum TRPApiKeys : Swift.String, Swift.CaseIterable {
  case trpApiKey
  case trpGooglePlace
  case trpUberClient
  case mglMapboxAccessToken
  public init?(rawValue: Swift.String)
  public typealias AllCases = [TRPFoundationKit.TRPApiKeys]
  public typealias RawValue = Swift.String
  public static var allCases: [TRPFoundationKit.TRPApiKeys] {
    get
  }
  public var rawValue: Swift.String {
    get
  }
}
@objc public class TRPLocation : ObjectiveC.NSObject {
  public var lat: Swift.Double
  public var lon: Swift.Double
  public init(lat: Swift.Double, lon: Swift.Double)
  public func prnt()
  public func json() -> [Swift.String : Any]
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class TRPApiKeyController {
  public static func checkMissingApiKeys(_ frameworks: [TRPFoundationKit.TRPApiKeys], bundle: Foundation.Bundle = Bundle.main) -> [TRPFoundationKit.TRPApiKeys]
  public static func getKey(_ framework: TRPFoundationKit.TRPApiKeys, bundle: Foundation.Bundle = Bundle.main) -> Swift.String?
  @objc deinit
}
extension Array {
  public func toString(_ separator: Swift.String? = nil) -> Swift.String
}
extension UIViewController {
  public func hiddenBackButtonTitle()
}
public struct TRPTime {
  public var timeForServer: Swift.String {
    get
  }
  public var toDate: Foundation.Date? {
    get
  }
  public var date: Swift.String
  public var time: Swift.String
  public init(year: Swift.Int, month: Swift.Int, day: Swift.Int, hours: Swift.Int, min: Swift.Int)
  public init(date: Swift.String, time: Swift.String)
  public init?(dateTime: Swift.String)
  public init(date: Foundation.Date)
}
extension TRPTime : Swift.Equatable {
  public static func == (lhs: TRPFoundationKit.TRPTime, rhs: TRPFoundationKit.TRPTime) -> Swift.Bool
}
